//https://www.hackerrank.com/challenges/balanced-brackets/problem

	public static void main(String[] args) {

		Scanner in = new Scanner(System.in);
		int t = in.nextInt();
		for (int a0 = 0; a0 < t; a0++) {
			String s = in.next();
			boolean result = isBalanced(s.chars());
			System.out.println(result ? "YES" : "NO");
		}
		in.close();
	}

	private static boolean isBalanced(IntStream input) {

		Stack<Integer> stack = new Stack<>();
		for (int toPush : (Iterable<Integer>) input::iterator) {

			if (isOpen(toPush))
				stack.push(toPush);
			else {

				//invalid state
				if (stack.isEmpty())
					return false;

				int popped = stack.pop();

				//invalid state
				if (isClose(popped))
					return false;

				//we do not insert matched brackets
				if (!isMatchedOpenClose(popped, toPush))
					return false;
			}
		}

		return stack.isEmpty();
	}

	private static boolean isClose(int a) {
		return a == ')' || a == '}' || a == ']';
	}

	private static boolean isOpen(int a) {
		return a == '(' || a == '{' || a == '[';
	}

	private static boolean isMatchedOpenClose(int a, int b) {
		return a == '(' && b == ')' || a == '{' && b == '}' || a == '[' && b == ']';
	}
